apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "Kafka",
          "metadata": {
            "name": "kafka",
            "namespace": "multicluster-global-hub"
          },
          "spec": {
            "entityOperator": {
              "topicOperator": {},
              "userOperator": {}
            },
            "kafka": {
              "config": {
                "auto.create.topics.enable": "false",
                "inter.broker.protocol.version": 3.3,
                "log.message.format.version": 3.3,
                "offsets.topic.replication.factor": 2,
                "ssl.cipher.suites": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ssl.enabled.protocols": "TLSv1.2",
                "ssl.protocol": "TLSv1.2",
                "transaction.state.log.min.isr": 2,
                "transaction.state.log.replication.factor": 3
              },
              "listeners": [
                {
                  "configuration": {
                    "useServiceDnsDomain": true
                  },
                  "name": "plain",
                  "port": 9092,
                  "tls": false,
                  "type": "internal"
                },
                {
                  "authentication": {
                    "type": "tls"
                  },
                  "name": "external",
                  "port": 9093,
                  "tls": true,
                  "type": "route"
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 15,
                "timeoutSeconds": 5
              },
              "logging": {
                "loggers": {
                  "kafka.root.logger.level": "INFO"
                },
                "type": "inline"
              },
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "timeoutSeconds": 5
              },
              "replicas": 3,
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "deleteClaim": false,
                    "id": 0,
                    "size": "10Gi",
                    "type": "persistent-claim"
                  }
                ]
              },
              "version": "3.3.2"
            },
            "zookeeper": {
              "logging": {
                "loggers": {
                  "zookeeper.root.logger": "INFO"
                },
                "type": "inline"
              },
              "replicas": 3,
              "storage": {
                "deleteClaim": false,
                "size": "10Gi",
                "type": "persistent-claim"
              }
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaTopic",
          "metadata": {
            "labels": {
              "strimzi.io/cluster": "kafka"
            },
            "name": "spec",
            "namespace": "multicluster-global-hub"
          },
          "spec": {
            "config": {
              "cleanup.policy": "compact"
            },
            "partitions": 1,
            "replicas": 2
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaUser",
          "metadata": {
            "labels": {
              "strimzi.io/cluster": "kafka"
            },
            "name": "global-hub-kafka-user",
            "namespace": "multicluster-global-hub"
          },
          "spec": {
            "authentication": {
              "type": "tls"
            }
          }
        },
        {
          "apiVersion": "operator.open-cluster-management.io/v1alpha4",
          "kind": "MulticlusterGlobalHub",
          "metadata": {
            "name": "multiclusterglobalhub"
          },
          "spec": {
            "dataLayer": {
              "kafka": {
                "transportFormat": "cloudEvents"
              },
              "postgres": {
                "retention": "18m"
              }
            }
          }
        },
        {
          "apiVersion": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "cluster",
            "namespace": "multicluster-global-hub"
          },
          "spec": {
            "backups": {
              "pgbackrest": {
                "repos": [
                  {
                    "name": "repo1",
                    "volume": {
                      "volumeClaimSpec": {
                        "accessModes": [
                          "ReadWriteOnce"
                        ],
                        "resources": {
                          "requests": {
                            "storage": "1Gi"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "instances": [
              {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "postgres-operator.crunchydata.com/cluster": "cluster",
                              "postgres-operator.crunchydata.com/instance-set": "pgha1"
                            }
                          },
                          "topologyKey": "kubernetes.io/hostname"
                        },
                        "weight": 1
                      }
                    ]
                  }
                },
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "20Gi"
                    }
                  }
                },
                "name": "pgha1",
                "replicas": 3
              }
            ],
            "postgresVersion": 14,
            "users": [
              {
                "databases": [
                  "hoh"
                ],
                "name": "postgres"
              },
              {
                "databases": [
                  "hoh"
                ],
                "name": "guest",
                "options": "LOGIN"
              }
            ]
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Integration & Delivery,OpenShift Optional
    certified: "false"
    containerImage: quay.io/stolostron/multicluster-global-hub-operator:latest
    createdAt: "2023-08-24T09:15:15Z"
    description: Manages the installation and upgrade of the Multicluster Global Hub.
    operatorframework.io/suggested-namespace: multicluster-global-hub
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io",
      "kafkabridges.kafka.strimzi.io", "kafkaconnectors.kafka.strimzi.io", "kafkaconnects.kafka.strimzi.io",
      "kafkamirrormaker2s.kafka.strimzi.io", "kafkamirrormakers.kafka.strimzi.io",
      "kafkarebalances.kafka.strimzi.io"]'
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/stolostron/multicluster-global-hub
    support: Red Hat
  name: multicluster-global-hub-operator.v1.0.0-dev
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: KafkaBridge
      name: kafkabridges.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaConnector
      name: kafkaconnectors.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaConnect
      name: kafkaconnects.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaMirrorMaker2
      name: kafkamirrormaker2s.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaMirrorMaker
      name: kafkamirrormakers.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaRebalance
      name: kafkarebalances.kafka.strimzi.io
      version: v1beta2
    - kind: Kafka
      name: kafkas.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaTopic
      name: kafkatopics.kafka.strimzi.io
      version: v1beta2
    - kind: KafkaUser
      name: kafkausers.kafka.strimzi.io
      version: v1beta2
    - kind: MulticlusterGlobalHub
      name: multiclusterglobalhubs.operator.open-cluster-management.io
      version: v1alpha4
    - kind: PostgresCluster
      name: postgresclusters.postgres-operator.crunchydata.com
      version: v1beta1
    - kind: StrimziPodSet
      name: strimzipodsets.core.strimzi.io
      version: v1beta2
  description: "Multicluster Global Hub Operator defines the configuration for multicluster
    global hub installation and upgrade with one custom resource.\n\n## Prerequisites\n\n-
    Red Hat Advanced Cluster Management for Kubernetes (RHACM) 2.7 or later needs
    to be installed.\n## How to Install\n\nInstall the Multicluster Global Hub Operator
    by following the instructions that are displayed after you select the Install
    button. The operator must be installed in the same namespace as Red Hat Advanced
    Cluster Management for Kubernetes (RHACM), by default, in `open-cluster-management`
    namespace.\n\nA pod will be created in `open-cluster-management` namespace\n\n```\n$
    kubectl get pods -n open-cluster-management\nNAME                                                             READY
    \  STATUS    RESTARTS   AGE\nmulticluster-global-hub-operator-5ccbbc878d-98fdp
    \               1/1     Running   0          19s\n```\n\nThe operator is now providing
    new Custom Resources Definitions: `multiclusterglobalhubs.operator.open-cluster-management.io`\n\n##
    Using the Multicluster Global Hub Operator\n\nAfter installed the operator, create
    an instance of the MulticlusterGlobalHub resource to instantiate the Multicluster
    Global Hub.\n\nYou need to prepare:\n\n- PostgreSQL needs to be installed and
    you must create database for the multicluster global hub. You must create a secret
    named multicluster-global-hub-storage that contains the database access credential
    in `open-cluster-management` namespace. You can run the following command to create
    the secret: \n\n```\nkubectl create secret generic multicluster-global-hub-storage
    -n open-cluster-management \\\n  --from-literal=database_uri=<postgresql-uri>
    \\\n --from-literal=database_uri_with_readonlyuser=<postgresql-uri-with-readonlyuser>
    \\\n --from-file=ca.crt=<CA-for-postgres-server> \n```\n>_Note:_ There is a sample
    script available [here](https://github.com/stolostron/multicluster-global-hub/tree/main/operator/config/samples/storage)(Note:
    the client version of kubectl must be v1.21+) to install postgres in `hoh-postgres`
    namespace and create the secret `multicluster-global-hub-storage` in namespace
    `open-cluster-management` automatically. To override the secret namespace, set
    `TARGET_NAMESPACE` environment variable to the RHACM installation namespace before
    executing the script.\n\n- Kafka needs to be installed, and you must create three
    topics, `spec` `status` and `event`. You need to create a secret named multicluster-global-hub-transport
    that contains the kafka access information should be created in `open-cluster-management`
    namespace. You can run the following command to create the secret: \n\n```\nkubectl
    create secret generic multicluster-global-hub-transport -n open-cluster-management
    \\\n  --from-literal=bootstrap_server=<kafka-bootstrap-server-address> \\\n      --from-file=ca.crt=<CA-cert-for-kafka-server>
    --from-file=client.crt=<Client-cert-for-kafka-server> --from-file=client.key=<Client-key-for-kafka-server>
    \n```\n >_Note:_ There is a sample script available [here](https://github.com/stolostron/multicluster-global-hub/tree/main/operator/config/samples/transport)
    to install kafka in `kafka` namespace and create the secret `multicluster-global-hub-transport`
    in namespace `open-cluster-management` automatically. To override the secret namespace,
    set `TARGET_NAMESPACE` environment variable to the RHACM installation namespace
    before executing the script.\n\nOnce an instance of the MulticlusterGlobalHub
    is created, the following pods are created in the `open-cluster-management` namespace:\n\n```\n$
    kubectl get pods -n open-cluster-management\nNAME                                                             READY
    \  STATUS    RESTARTS   AGE\nmulticluster-global-hub-grafana-79f8d59f58-qwcjl
    \                1/1     Running   0          22s\nmulticluster-global-hub-operator-5ccbbc878d-98fdp
    \               1/1     Running   0          56s\nmulticluster-global-hub-manager-7c55644568-mth8f
    \                1/1     Running   0          11s\n```\n"
  displayName: Multicluster Global Hub Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNTguNTEgMjU4LjUxIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2QxZDFkMTt9LmNscy0ye2ZpbGw6IzhkOGQ4Zjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPkFzc2V0IDQ8L3RpdGxlPjxnIGlkPSJMYXllcl8yIiBkYXRhLW5hbWU9IkxheWVyIDIiPjxnIGlkPSJMYXllcl8xLTIiIGRhdGEtbmFtZT0iTGF5ZXIgMSI+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTI5LjI1LDIwQTEwOS4xLDEwOS4xLDAsMCwxLDIwNi40LDIwNi40LDEwOS4xLDEwOS4xLDAsMSwxLDUyLjExLDUyLjExLDEwOC40NSwxMDguNDUsMCwwLDEsMTI5LjI1LDIwbTAtMjBoMEM1OC4xNiwwLDAsNTguMTYsMCwxMjkuMjVIMGMwLDcxLjA5LDU4LjE2LDEyOS4yNiwxMjkuMjUsMTI5LjI2aDBjNzEuMDksMCwxMjkuMjYtNTguMTcsMTI5LjI2LTEyOS4yNmgwQzI1OC41MSw1OC4xNiwyMDAuMzQsMCwxMjkuMjUsMFoiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0xNzcuNTQsMTAzLjQxSDE0MS42NkwxNTQuOSw2NS43NmMxLjI1LTQuNC0yLjMzLTguNzYtNy4yMS04Ljc2SDEwMi45M2E3LjMyLDcuMzIsMCwwLDAtNy40LDZsLTEwLDY5LjYxYy0uNTksNC4xNywyLjg5LDcuODksNy40LDcuODloMzYuOUwxMTUuNTUsMTk3Yy0xLjEyLDQuNDEsMi40OCw4LjU1LDcuMjQsOC41NWE3LjU4LDcuNTgsMCwwLDAsNi40Ny0zLjQ4TDE4NCwxMTMuODVDMTg2Ljg2LDEwOS4yNCwxODMuMjksMTAzLjQxLDE3Ny41NCwxMDMuNDFaIi8+PC9nPjwvZz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - policy.open-cluster-management.io
          resources:
          - policies
          - policies/status
          - policies/finalizers
          - placementbindings
          - placementbindings/finalizers
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - placementrules
          - placementrules/status
          - subscriptionstatuses
          - subscriptionstatuses/status
          - subscriptionreports
          - subscriptionreports/status
          - subscriptions/finalizers
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - placements
          - placements/finalizers
          - placements/status
          - placementdecisions
          - placementdecisions/status
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - events
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclustersets
          - managedclustersets/finalizers
          - managedclustersetbindings
          - managedclustersetbindings/finalizers
          - placements
          - placements/finalizers
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - placementrules
          - placementrules/finalizers
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - subscriptions
          - channels
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - app.k8s.io
          resources:
          - applications
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - addondeploymentconfigs
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - clustermanagementaddons
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - clustermanagementaddons/finalizers
          verbs:
          - update
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - managedclusteraddons
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - managedclusteraddons/finalizers
          verbs:
          - update
        - apiGroups:
          - addon.open-cluster-management.io
          resources:
          - managedclusteraddons/status
          verbs:
          - patch
          - update
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - agent.open-cluster-management.io
          resources:
          - klusterletaddonconfigs
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - app.k8s.io
          resources:
          - applications
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - channels
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - placementrules
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apps.open-cluster-management.io
          resources:
          - subscriptions
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
          - get
        - apiGroups:
          - certificates.k8s.io
          resources:
          - certificatesigningrequests
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - certificates.k8s.io
          resources:
          - certificatesigningrequests/approval
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - certificates.k8s.io
          resources:
          - signers
          verbs:
          - approve
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclusters
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclustersets
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclustersets/bind
          verbs:
          - create
          - delete
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclustersets/join
          verbs:
          - create
          - delete
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - placements
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - multiclusterglobalhubs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - multiclusterglobalhubs/finalizers
          verbs:
          - update
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - multiclusterglobalhubs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - multiclusterhubs
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - packages.operators.coreos.com
          resources:
          - packagemanifests
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - policy.open-cluster-management.io
          resources:
          - placementbindings
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - policy.open-cluster-management.io
          resources:
          - policies
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - work.open-cluster-management.io
          resources:
          - manifestworks
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: multicluster-global-hub-operator
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - endpoints/restricted
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - postgres-operator.crunchydata.com
          resources:
          - postgresclusters
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - postgres-operator.crunchydata.com
          resources:
          - postgresclusters/finalizers
          verbs:
          - update
        - apiGroups:
          - postgres-operator.crunchydata.com
          resources:
          - postgresclusters/status
          verbs:
          - patch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - create
          - get
          - list
          - patch
          - watch
        serviceAccountName: pgo
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
        serviceAccountName: strimzi-cluster-operator
      deployments:
      - label:
          name: multicluster-global-hub-operator
        name: multicluster-global-hub-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: multicluster-global-hub-operator
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: multicluster-global-hub-operator
              labels:
                name: multicluster-global-hub-operator
            spec:
              containers:
              - args:
                - --leader-election
                command:
                - multicluster-global-hub-operator
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RELATED_IMAGE_MULTICLUSTER_GLOBAL_HUB_MANAGER
                  value: quay.io/stolostron/multicluster-global-hub-manager:latest
                - name: RELATED_IMAGE_MULTICLUSTER_GLOBAL_HUB_AGENT
                  value: quay.io/stolostron/multicluster-global-hub-agent:latest
                - name: RELATED_IMAGE_GRAFANA
                  value: quay.io/stolostron/grafana:2.8.0-SNAPSHOT-2023-03-06-01-52-34
                - name: RELATED_IMAGE_OAUTH_PROXY
                  value: quay.io/stolostron/origin-oauth-proxy:4.9
                image: quay.io/stolostron/multicluster-global-hub-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: multicluster-global-hub-operator
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: multicluster-global-hub-operator
              terminationGracePeriodSeconds: 10
      - label:
          app: postgres-operator
        name: pgo
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: postgres-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: postgres-operator
            spec:
              containers:
              - image: registry.developers.crunchydata.com/crunchydata/postgres-operator:ubi8-5.3.3-0
                name: operator
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
              serviceAccountName: pgo
      - label:
          app: strimzi
        name: strimzi-cluster-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: strimzi-cluster-operator
              strimzi.io/kind: cluster-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: strimzi-cluster-operator
                strimzi.io/kind: cluster-operator
            spec:
              containers:
              - args:
                - /opt/strimzi/bin/cluster_operator_run.sh
                env:
                - name: STRIMZI_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                  value: "120000"
                - name: STRIMZI_OPERATION_TIMEOUT_MS
                  value: "300000"
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                  value: quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
                  value: quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
                  value: quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_KAFKA_IMAGES
                  value: |
                    3.2.0=quay.io/strimzi/kafka:0.33.2-kafka-3.2.0
                    3.2.1=quay.io/strimzi/kafka:0.33.2-kafka-3.2.1
                    3.2.3=quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
                    3.3.1=quay.io/strimzi/kafka:0.33.2-kafka-3.3.1
                    3.3.2=quay.io/strimzi/kafka:0.33.2-kafka-3.3.2
                    3.4.0=quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_KAFKA_CONNECT_IMAGES
                  value: |
                    3.2.0=quay.io/strimzi/kafka:0.33.2-kafka-3.2.0
                    3.2.1=quay.io/strimzi/kafka:0.33.2-kafka-3.2.1
                    3.2.3=quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
                    3.3.1=quay.io/strimzi/kafka:0.33.2-kafka-3.3.1
                    3.3.2=quay.io/strimzi/kafka:0.33.2-kafka-3.3.2
                    3.4.0=quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                  value: |
                    3.2.0=quay.io/strimzi/kafka:0.33.2-kafka-3.2.0
                    3.2.1=quay.io/strimzi/kafka:0.33.2-kafka-3.2.1
                    3.2.3=quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
                    3.3.1=quay.io/strimzi/kafka:0.33.2-kafka-3.3.1
                    3.3.2=quay.io/strimzi/kafka:0.33.2-kafka-3.3.2
                    3.4.0=quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
                  value: |
                    3.2.0=quay.io/strimzi/kafka:0.33.2-kafka-3.2.0
                    3.2.1=quay.io/strimzi/kafka:0.33.2-kafka-3.2.1
                    3.2.3=quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
                    3.3.1=quay.io/strimzi/kafka:0.33.2-kafka-3.3.1
                    3.3.2=quay.io/strimzi/kafka:0.33.2-kafka-3.3.2
                    3.4.0=quay.io/strimzi/kafka:0.33.2-kafka-3.4.0
                - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                  value: quay.io/strimzi/operator:0.33.2
                - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                  value: quay.io/strimzi/operator:0.33.2
                - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                  value: quay.io/strimzi/operator:0.33.2
                - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                  value: quay.io/strimzi/kafka-bridge:0.24.0
                - name: STRIMZI_DEFAULT_JMXTRANS_IMAGE
                  value: quay.io/strimzi/jmxtrans:0.33.2
                - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
                  value: quay.io/strimzi/kaniko-executor:0.33.2
                - name: STRIMZI_DEFAULT_MAVEN_BUILDER
                  value: quay.io/strimzi/maven-builder:0.33.2
                - name: STRIMZI_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: STRIMZI_FEATURE_GATES
                - name: STRIMZI_LEADER_ELECTION_ENABLED
                  value: "true"
                - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
                  value: strimzi-cluster-operator
                - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: STRIMZI_LEADER_ELECTION_IDENTITY
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/strimzi/operator:0.33.2
                livenessProbe:
                  httpGet:
                    path: /healthy
                    port: http
                  initialDelaySeconds: 10
                  periodSeconds: 30
                name: strimzi-cluster-operator
                ports:
                - containerPort: 8080
                  name: http
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: http
                  initialDelaySeconds: 10
                  periodSeconds: 30
                resources:
                  limits:
                    cpu: "1"
                    memory: 384Mi
                  requests:
                    cpu: 200m
                    memory: 384Mi
                volumeMounts:
                - mountPath: /tmp
                  name: strimzi-tmp
                - mountPath: /opt/strimzi/custom-config/
                  name: co-config-volume
              serviceAccountName: strimzi-cluster-operator
              volumes:
              - emptyDir:
                  medium: Memory
                  sizeLimit: 1Mi
                name: strimzi-tmp
              - configMap:
                  name: strimzi-cluster-operator
                name: co-config-volume
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - multicluster-global-hub-manager
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - create
          - update
          - delete
        serviceAccountName: multicluster-global-hub-operator
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          - serviceaccounts
          - configmaps
          - services
          - endpoints
          - secrets
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/scale
          - deployments/status
          - statefulsets
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          - events.k8s.io
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - build.openshift.io
          resources:
          - buildconfigs
          - buildconfigs/instantiate
          - builds
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkatopics
          - kafkatopics/status
          - kafkausers
          - kafkausers/status
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
        - apiGroups:
          - coordination.k8s.io
          resourceNames:
          - strimzi-cluster-operator
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - watch
          - list
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkas
          - kafkas/status
          - kafkaconnects
          - kafkaconnects/status
          - kafkaconnectors
          - kafkaconnectors/status
          - kafkamirrormakers
          - kafkamirrormakers/status
          - kafkabridges
          - kafkabridges/status
          - kafkamirrormaker2s
          - kafkamirrormaker2s/status
          - kafkarebalances
          - kafkarebalances/status
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - core.strimzi.io
          resources:
          - strimzipodsets
          - strimzipodsets/status
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        serviceAccountName: strimzi-cluster-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - multicluster-global-hub
  - multiple-hubs
  links:
  - name: Multicluster Global Hub Operator
    url: https://github.com/stolostron/multicluster-global-hub
  maintainers:
  - email: acm-contact@redhat.com
    name: acm-contact
  maturity: alpha
  provider:
    name: Red Hat, Inc
    url: https://github.com/stolostron/multicluster-global-hub
  version: 1.0.0-dev
